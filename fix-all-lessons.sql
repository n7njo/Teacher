-- Update Lesson 1: Fix command examples
UPDATE lessons SET content = jsonb_set(content, '{html}', '"<h1>Getting Started with Claude Flow v2.0.0 Alpha</h1><p>Claude Flow is an <strong>enterprise-grade AI orchestration platform</strong> that enables you to coordinate multiple AI agents working together as <strong>swarms</strong> or <strong>hive-minds</strong> to accomplish complex development tasks efficiently.</p><h2>What is Claude Flow?</h2><p>Claude Flow is a command-line tool that orchestrates AI agents to work collaboratively on software development projects. Think of it as having a team of specialized AI developers working together under intelligent coordination.</p><h3>🐝 Core Concepts</h3><ul><li><strong>Swarms</strong>: Quick task-oriented AI agent coordination for specific objectives</li><li><strong>Hive-Mind</strong>: Persistent, complex multi-agent systems with memory and learning</li><li><strong>Agents</strong>: Specialized AI workers (researcher, coder, analyst, architect, tester, etc.)</li><li><strong>Coordination</strong>: Queen-led hierarchical or peer-to-peer mesh coordination strategies</li></ul><h2>🚀 Installation and Setup</h2><h3>Prerequisites</h3><ul><li><strong>Node.js 18+</strong> (LTS recommended)</li><li><strong>npm 9+</strong> or equivalent package manager</li><li><strong>Claude Code</strong> (required for AI coordination)</li></ul><h3>Installation Steps</h3><p>Run these commands in your terminal:</p><pre><code># Install Claude Code globally (required first step)\\nnpm install -g @anthropic-ai/claude-code\\n\\n# Install Claude Flow Alpha\\nnpm install -g claude-flow@alpha\\n\\n# OR use NPX for instant testing\\nnpx claude-flow@alpha init --force</code></pre><h3>Quick Verification</h3><p>Verify your installation with these terminal commands:</p><pre><code># Check version\\nclaude-flow --version\\n# Should show: 2.0.0-alpha.103\\n\\n# Initialize Claude Flow with enterprise features\\nnpx claude-flow@alpha init --force --sparc</code></pre><h2>🎯 Basic Commands</h2><p>All Claude Flow commands are run in your terminal. Here are the essential patterns:</p><h3>Swarm Commands (Quick Tasks)</h3><p>Use swarm commands for quick, task-oriented AI coordination:</p><pre><code># Basic swarm creation\\nnpx claude-flow@alpha swarm \"Build a REST API with Node.js\"\\n\\n# With specific strategy\\nnpx claude-flow@alpha swarm \"Research cloud architecture patterns\" --strategy research\\n\\n# Parallel execution for speed\\nnpx claude-flow@alpha swarm \"Create a React component\" --parallel --max-agents 3</code></pre><h3>Hive-Mind Commands (Complex Projects)</h3><p>Use hive-mind commands for persistent, complex multi-agent coordination:</p><pre><code># Launch hive-mind wizard (interactive setup)\\nnpx claude-flow@alpha hive-mind wizard\\n\\n# Spawn a hive-mind for complex tasks\\nnpx claude-flow@alpha hive-mind spawn \"Build enterprise e-commerce platform\" --agents 8 --claude\\n\\n# Check status of active hive-minds\\nnpx claude-flow@alpha hive-mind status</code></pre><h2>🤖 Agent Types</h2><p>Claude Flow includes specialized AI agents for different development roles:</p><ul><li><strong>👑 Coordinator</strong>: Task management, resource allocation, consensus building</li><li><strong>🔍 Researcher</strong>: Information gathering, pattern recognition, knowledge synthesis</li><li><strong>💻 Coder</strong>: Code generation, refactoring, debugging</li><li><strong>📊 Analyst</strong>: Data analysis, performance metrics, bottleneck detection</li><li><strong>🏗️ Architect</strong>: System design, architecture patterns, integration planning</li><li><strong>🧪 Tester</strong>: Test generation, quality assurance, edge case detection</li><li><strong>👀 Reviewer</strong>: Code review, standards enforcement, best practices</li><li><strong>⚡ Optimizer</strong>: Performance optimization, resource optimization</li><li><strong>📝 Documenter</strong>: Documentation generation, API docs, user guides</li><li><strong>📊 Monitor</strong>: System monitoring, health checks, alerting</li></ul><h2>📋 Practical Examples</h2><p>Here are realistic examples you can try in your terminal:</p><h3>Example 1: Build a Simple API</h3><pre><code>npx claude-flow@alpha swarm \"Create a Node.js REST API with Express for user management\" --strategy development --parallel</code></pre><h3>Example 2: Research and Analysis</h3><pre><code>npx claude-flow@alpha swarm \"Research microservices architecture patterns for e-commerce\" --strategy research --max-agents 3</code></pre><h3>Example 3: Complex Application Development</h3><pre><code># Launch hive-mind for complex project\\nnpx claude-flow@alpha hive-mind spawn \"Build full-stack React/Node.js app with authentication, database, and deployment\" --agents 6 --claude\\n\\n# Monitor progress\\nnpx claude-flow@alpha hive-mind status\\n\\n# Resume later if needed (use the session ID from spawn output)\\nnpx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx</code></pre><h2>🔧 Advanced Features</h2><h3>Memory Management</h3><p>Claude Flow maintains persistent memory across sessions:</p><pre><code># Store project knowledge\\nnpx claude-flow@alpha memory store \"architecture\" \"microservices with API gateway pattern\"\\n\\n# Query stored knowledge\\nnpx claude-flow@alpha memory query \"authentication\" --recent\\n\\n# View memory statistics\\nnpx claude-flow@alpha memory stats</code></pre><h3>GitHub Integration</h3><p>Specialized GitHub workflow automation modes:</p><pre><code># GitHub workflow coordination\\nnpx claude-flow@alpha github gh-coordinator analyze --analysis-type security\\n\\n# Pull request management\\nnpx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered\\n\\n# Release coordination\\nnpx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog</code></pre><h2>🎯 When to Use What</h2><table><thead><tr><th>Use Case</th><th>Command</th><th>Best For</th></tr></thead><tbody><tr><td>Quick feature development</td><td><code>swarm</code></td><td>Single objectives, temporary coordination</td></tr><tr><td>Complex projects</td><td><code>hive-mind</code></td><td>Multi-feature projects, persistent sessions</td></tr><tr><td>Research tasks</td><td><code>swarm --strategy research</code></td><td>Information gathering, analysis</td></tr><tr><td>Code optimization</td><td><code>swarm --strategy optimization</code></td><td>Performance improvements, refactoring</td></tr><tr><td>Testing and QA</td><td><code>swarm --strategy testing</code></td><td>Test generation, quality assurance</td></tr></tbody></table><h2>💡 Best Practices</h2><h3>1. Choose the Right Strategy</h3><ul><li><strong>Development</strong>: For building applications and features</li><li><strong>Research</strong>: For analysis and information gathering</li><li><strong>Testing</strong>: For quality assurance and validation</li><li><strong>Optimization</strong>: For performance improvements</li></ul><h3>2. Agent Coordination Tips</h3><ul><li>Start with 3-5 agents for most tasks</li><li>Use <code>--parallel</code> for independent sub-tasks</li><li>Enable <code>--monitor</code> for real-time progress tracking</li><li>Use memory namespaces to organize project knowledge</li></ul><h3>3. Project Organization</h3><ul><li>Use <code>hive-mind</code> for projects spanning multiple sessions</li><li>Organize related tasks in the same memory namespace</li><li>Resume sessions using session IDs when continuing work</li><li>Use <code>--dry-run</code> to preview configurations before execution</li></ul><h2>🚀 Next Steps</h2><p>Now that you understand the basics of Claude Flow, you are ready to:</p><ol><li><strong>Try the Quick Start</strong>: Run <code>npx claude-flow@alpha init --force</code> in your terminal</li><li><strong>Create Your First Swarm</strong>: Use <code>swarm</code> for a simple development task</li><li><strong>Explore Examples</strong>: Check the examples directory for sample workflows</li><li><strong>Learn Advanced Features</strong>: Experiment with hive-mind coordination and memory management</li><li><strong>Build Real Projects</strong>: Apply swarm intelligence to your development workflow</li></ol><h2>📚 Additional Resources</h2><ul><li><a href=\"https://github.com/ruvnet/claude-flow\">Claude Flow GitHub Repository</a></li><li><a href=\"https://github.com/ruvnet/claude-flow/tree/main/examples\">Examples and Tutorials</a></li><li><a href=\"https://github.com/ruvnet/claude-flow/blob/main/docs\">Complete Documentation</a></li><li><a href=\"https://discord.com/invite/dfxmpwkG2D\">Agentics Community Discord</a></li></ul><h2>🎉 Conclusion</h2><p>Claude Flow revolutionizes software development by enabling intelligent AI agent coordination. Whether you are building simple applications or complex enterprise systems, Claude Flow provides the tools and coordination mechanisms to accelerate your development process through collaborative AI intelligence.</p><p>Start with simple swarm tasks, progress to complex hive-mind coordination, and discover how AI agent orchestration can transform your development workflow.</p><p><strong>Ready to begin?</strong> Run <code>npx claude-flow@alpha init --force</code> in your terminal and start building with AI swarm intelligence!</p>"')
WHERE id = 'c3d4e5f6-a748-4912-cdef-345678901234';