services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: skillforge_db
    environment:
      POSTGRES_DB: skillforge_learning
      POSTGRES_USER: skillforge_user
      POSTGRES_PASSWORD: skillforge_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skillforge_user -d skillforge_learning"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: skillforge_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://skillforge_user:skillforge_password@database:5432/skillforge_learning
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: skillforge_frontend
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3001
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    command: npm start

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: skillforge_network
